"use strict";(self.webpackChunkayon_docs=self.webpackChunkayon_docs||[]).push([[5327],{18679:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),s=n(86010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,s.Z)(r.tabItem,i),hidden:n},t)}},73992:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(87462),s=n(67294),r=n(86010),i=n(72957),o=n(16550),l=n(75238),u=n(33609),c=n(92560);function d(e){return function(e){return s.Children.map(e,(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:s}}=e;return{value:t,label:n,attributes:a,default:s}}))}function p(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(r),(0,s.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=p(e),[i,o]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[l,u]=h({queryString:n,groupId:a}),[d,v]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,s.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),f=(()=>{const e=l??d;return m({value:e,tabValues:r})?e:null})();(0,s.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),v(e)}),[u,v,r]),tabValues:r}}var f=n(51048);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:n,selectedValue:o,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==o&&(d(t),l(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return s.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,r.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":o===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return s.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=v(e);return s.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},s.createElement(k,(0,a.Z)({},e,t)),s.createElement(b,(0,a.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return s.createElement(y,(0,a.Z)({key:String(t)},e))}},65538:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(87462),s=(n(67294),n(3905));n(73992),n(18679);const r={id:"admin_server_provisioning",title:"Provisioning",sidebar_label:"Provisioning"},i=void 0,o={unversionedId:"admin_server_provisioning",id:"admin_server_provisioning",title:"Provisioning",description:"Configuration file",source:"@site/docs/admin_server_provisioning.md",sourceDirName:".",slug:"/admin_server_provisioning",permalink:"/docs/admin_server_provisioning",draft:!1,editUrl:"https://github.com/ynput/ayon-documentation/tree/main/website/docs/admin_server_provisioning.md",tags:[],version:"current",frontMatter:{id:"admin_server_provisioning",title:"Provisioning",sidebar_label:"Provisioning"},sidebar:"Admin",previous:{title:"Installing addons",permalink:"/docs/admin_server_installing_addons"},next:{title:"Services",permalink:"/docs/admin_server_services"}},l={},u=[{value:"Configuration file",id:"configuration-file",level:2},{value:"File structure",id:"file-structure",level:2},{value:"Secrets",id:"secrets",level:3},{value:"Access groups",id:"access-groups",level:2},{value:"Role definition example",id:"role-definition-example",level:3},{value:"Users",id:"users",level:3},{value:"<code>forceUpdate</code> (boolean)",id:"forceupdate-boolean",level:4},{value:"<code>fullName</code> (string)",id:"fullname-string",level:4},{value:"<code>email</code> (string)",id:"email-string",level:4},{value:"<code>avatarUrl</code> (string)",id:"avatarurl-string",level:4},{value:"<code>isManager</code> (boolean)",id:"ismanager-boolean",level:4},{value:"<code>isAdmin</code> (boolean)",id:"isadmin-boolean",level:4},{value:"<code>isService</code> (boolean)",id:"isservice-boolean",level:4},{value:"<code>isGuest</code> (boolean)",id:"isguest-boolean",level:4},{value:"<code>password</code> (string)",id:"password-string",level:4},{value:"<code>apiKey</code> (string)",id:"apikey-string",level:4},{value:"<code>defaultAccessGroups</code> (array of strings)",id:"defaultaccessgroups-array-of-strings",level:4},{value:"<code>accessGroups</code>",id:"accessgroups",level:4}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"configuration-file"},"Configuration file"),(0,s.kt)("p",null,"Ayon server offers a convenient method for bootstrapping its basic settings\nusing a single JSON file. This enables you to quickly set up the server with\nyour desired configurations."),(0,s.kt)("admonition",{title:"Security Considerations",type:"important"},(0,s.kt)("p",{parentName:"admonition"},"Using the bootstrapped settings is particularly useful during the testing phase of your Ayon server.\nHowever, once the server is properly set up and configured,\nit is strongly recommended to remove the ",(0,s.kt)("inlineCode",{parentName:"p"},"settings/template.json")," file."),(0,s.kt)("p",{parentName:"admonition"},"The reason for this recommendation is that the ",(0,s.kt)("inlineCode",{parentName:"p"},"template.json")," file may contain sensitive information,\nsuch as secrets and passwords, in plain text. Storing these credentials in an unsecured manner\nposes a security risk, as unauthorized users may gain access to the server's sensitive data.")),(0,s.kt)("h2",{id:"file-structure"},"File structure"),(0,s.kt)("p",null,"By default, the server expects the configuration file to be located at ",(0,s.kt)("inlineCode",{parentName:"p"},"settings/template.json"),".\nThe settings within this file will be applied each time you run the ",(0,s.kt)("inlineCode",{parentName:"p"},"make setup")," command."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-markdown"},"settings/\n  \u2514\u2500\u2500 template.json\n")),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"template.json")," file contains a dictionary with several optional keys that allow you to\ncustomize various aspects of your Ayon server. The available keys are:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"secrets")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"users")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"accessGroups"))),(0,s.kt)("h3",{id:"secrets"},"Secrets"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"secrets")," key is used for storing sensitive information that the server and addons have access to.\nSince settings are sent to clients, secrets provide a way to hide sensitive data from users.\nBoth the server part of addons and services have access to secrets and may use them as needed."),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"secrets": {\n  "secret_api_key": "123456789abcd"\n}\n')),(0,s.kt)("p",null,"In this example, a ",(0,s.kt)("inlineCode",{parentName:"p"},"secret_api_key")," is stored within the ",(0,s.kt)("inlineCode",{parentName:"p"},"secrets")," key.\nThis secret can be accessed by the server and addons, but will not be exposed to the users."),(0,s.kt)("h2",{id:"access-groups"},"Access groups"),(0,s.kt)("p",null,"User access groups define the level of access and permissions a user has within a project.\nEach role allows whitelisting certain rights to perform specific actions,\nsuch as reading, creating, updating, and deleting project resources."),(0,s.kt)("p",null,'If not provided, default access groups "artist", "viewer" and "editor" are created.'),(0,s.kt)("h3",{id:"role-definition-example"},"Role definition example"),(0,s.kt)("p",null,'The following example demonstrates how to create a single role named "artist".\nThis role grants users the ability to read and update subfolders,\nbut only if the user has tasks assigned on a parent folder.'),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"accessGroups" : [\n  {\n    "name": "artist",\n    "data": {\n      "read": {\n        "enabled": true,\n        "access_list": [{ "type": "assigned"}]\n      },\n      "create": {\n        "enabled": true,\n        "access_list": []\n      },\n      "delete": {\n        "enabled": true,\n        "access_list": []\n      },\n      "update": {\n        "enabled": true,\n        "access_list": [{ "type": "assigned"}]\n      }\n    }\n  }\n]\n')),(0,s.kt)("p",null,"For more information on the role data structure, please refer to the API documentation."),(0,s.kt)("h3",{id:"users"},"Users"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"users")," key is used to define user accounts for the Ayon server.\nThe value of this key is an array of dictionaries, with each dictionary representing a user account."),(0,s.kt)("p",null,"If the ",(0,s.kt)("inlineCode",{parentName:"p"},"users")," key is not provided in the ",(0,s.kt)("inlineCode",{parentName:"p"},"template.json")," file,\na default administrator with the username ",(0,s.kt)("inlineCode",{parentName:"p"},"admin")," and password ",(0,s.kt)("inlineCode",{parentName:"p"},"admin")," will be created."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"users": [\n  {\n    "name": "admin",\n    "password": "admin",\n    "fullName": "Ayon admin",\n    "isAdmin": true,\n    "forceUpdate": true\n  }\n]\n')),(0,s.kt)("h4",{id:"forceupdate-boolean"},(0,s.kt)("inlineCode",{parentName:"h4"},"forceUpdate")," (boolean)"),(0,s.kt)("p",null,"Ensures that the setup command will always update\nthe existing user with the information from the ",(0,s.kt)("inlineCode",{parentName:"p"},"template.json")," file, including the password."),(0,s.kt)("h4",{id:"fullname-string"},(0,s.kt)("inlineCode",{parentName:"h4"},"fullName")," (string)"),(0,s.kt)("p",null,"Represents the full name of the user."),(0,s.kt)("h4",{id:"email-string"},(0,s.kt)("inlineCode",{parentName:"h4"},"email")," (string)"),(0,s.kt)("p",null,"Represents the user's email address, which is used for authentication and communication purposes."),(0,s.kt)("h4",{id:"avatarurl-string"},(0,s.kt)("inlineCode",{parentName:"h4"},"avatarUrl")," (string)"),(0,s.kt)("p",null,"Contains the URL of the user's avatar image."),(0,s.kt)("h4",{id:"ismanager-boolean"},(0,s.kt)("inlineCode",{parentName:"h4"},"isManager")," (boolean)"),(0,s.kt)("p",null,"Indicates if the user is a manager.\nA manager has elevated privileges within the server."),(0,s.kt)("h4",{id:"isadmin-boolean"},(0,s.kt)("inlineCode",{parentName:"h4"},"isAdmin")," (boolean)"),(0,s.kt)("p",null,"Indicates if the user is an administrator.\nAn administrator has the highest level of access and control within the server."),(0,s.kt)("h4",{id:"isservice-boolean"},(0,s.kt)("inlineCode",{parentName:"h4"},"isService")," (boolean)"),(0,s.kt)("p",null,"Indicates if the user is a service account.\nA service account should be only used by addon services and it should be authenticated\nusing an API key."),(0,s.kt)("h4",{id:"isguest-boolean"},(0,s.kt)("inlineCode",{parentName:"h4"},"isGuest")," (boolean)"),(0,s.kt)("p",null,"Indicates if the user is a guest."),(0,s.kt)("h4",{id:"password-string"},(0,s.kt)("inlineCode",{parentName:"h4"},"password")," (string)"),(0,s.kt)("p",null,"Represents the user's password. This field is required for authentication purposes."),(0,s.kt)("h4",{id:"apikey-string"},(0,s.kt)("inlineCode",{parentName:"h4"},"apiKey")," (string)"),(0,s.kt)("p",null,"Contains the API key associated with service users.\nThis key is used when a service interacting with the server through the API."),(0,s.kt)("h4",{id:"defaultaccessgroups-array-of-strings"},(0,s.kt)("inlineCode",{parentName:"h4"},"defaultAccessGroups")," (array of strings)"),(0,s.kt)("p",null,"Lists the access groups assigned to the user on new projects.\nThese access groups determine the user's privileges and access levels within a project."),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"defaultAccessGroups": ["artist"]\n')),(0,s.kt)("h4",{id:"accessgroups"},(0,s.kt)("inlineCode",{parentName:"h4"},"accessGroups")),(0,s.kt)("p",null,"Lists the access groups assigned to the user on particular projects. "),(0,s.kt)("p",null,"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"accessGroups": {\n  "example_project1": ["artist"],\n  "example_project2": ["artist", "viewer"]\n}\n')))}p.isMDXComponent=!0}}]);