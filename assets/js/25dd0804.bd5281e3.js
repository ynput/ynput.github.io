"use strict";(self.webpackChunkayon_docs=self.webpackChunkayon_docs||[]).push([[1650],{18679:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const s={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,o),hidden:a},t)}},73992:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(87462),r=a(67294),s=a(86010),o=a(72957),i=a(16550),l=a(75238),u=a(33609),d=a(92560);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function g(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,s=p(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[l,u]=h({queryString:a,groupId:n}),[c,m]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,d.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:n}),f=(()=>{const e=l??c;return g({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),m(e)}),[u,m,s]),tabValues:s}}var f=a(51048);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:a,selectedValue:i,selectValue:l,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),p=e=>{const t=e.currentTarget,a=d.indexOf(t),n=u[a].value;n!==i&&(c(t),l(n))},g=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>d.push(e),onKeyDown:g,onClick:p},o,{className:(0,s.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:n}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=m(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",b.tabList)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(v,(0,n.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},7437:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var n=a(87462),r=(a(67294),a(3905));a(73992),a(18679);const s={id:"admin_settings",title:"Working with settings",sidebar_label:"Working with settings"},o=void 0,i={unversionedId:"admin_settings",id:"admin_settings",title:"Working with settings",description:"AYON stores all of its settings and configuration in the database. To make the configuration as easy as possible we provide a robust GUI where you can access and change everything that is configurable",source:"@site/docs/admin_settings.md",sourceDirName:".",slug:"/admin_settings",permalink:"/docs/admin_settings",draft:!1,editUrl:"https://github.com/ynput/ayon-documentation/tree/main/website/docs/admin_settings.md",tags:[],version:"current",frontMatter:{id:"admin_settings",title:"Working with settings",sidebar_label:"Working with settings"},sidebar:"Admin",previous:{title:"Environment",permalink:"/docs/admin_environment"},next:{title:"Colorspace settings",permalink:"/docs/admin_colorspace"}},l={},u=[{value:"Categories",id:"categories",level:2},{value:"System",id:"system",level:3},{value:"Project",id:"project",level:3},{value:"Understanding Overrides",id:"understanding-overrides",level:2},{value:"AYON defaults",id:"ayon-defaults",level:3},{value:"Studio defaults",id:"studio-defaults",level:3},{value:"Project Overrides",id:"project-overrides",level:3}],d={toc:u},c="wrapper";function p(e){let{components:t,...s}=e;return(0,r.kt)(c,(0,n.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"AYON stores all of its settings and configuration in the database. To make the configuration as easy as possible we provide a robust GUI where you can access and change everything that is configurable"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Settings")," GUI can be started from the tray menu ",(0,r.kt)("em",{parentName:"p"},"Admin -> Studio Settings"),"."),(0,r.kt)("admonition",{title:"Studio Settings versus Local Settings",type:"important"},(0,r.kt)("p",{parentName:"admonition"},"Please keep in mind that these settings are set up for the full studio and not per-individual. If you're looking for individual machine settings, you can head to site settings section in the documentation.")),(0,r.kt)("h2",{id:"categories"},"Categories"),(0,r.kt)("p",null,"We use simple colour coding to show you any changes to the settings:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Grey"),": ",(0,r.kt)("a",{parentName:"li",href:"#ayon-defaults"},"AYON default")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Green"),": ",(0,r.kt)("a",{parentName:"li",href:"#ayon-defaults"},"Studio default")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Orange"),": ",(0,r.kt)("a",{parentName:"li",href:"#project-overrides"},"Project Override")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Blue"),": Changed and unsaved value")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Colour coding",src:a(5551).Z,width:"495",height:"788"})),(0,r.kt)("p",null,"You'll find that settings are split into categories:"),(0,r.kt)("h3",{id:"system"},"System"),(0,r.kt)("p",null,"System sections contains all settings that can be configured on a studio level, but cannot be changed on a per-project basis. These include mostly high level options like path to mongo database, toggling major modules on and off and configuring studio wide application availability."),(0,r.kt)("h3",{id:"project"},"Project"),(0,r.kt)("p",null,"Project tab contains most of AYON settings and all of them can be configured and overridden on a per-project basis if need be. This includes most of the workflow behaviors like what formats to export, naming conventions, publishing validations, automatic assets loaders and a lot more."),(0,r.kt)("p",null,"We recommend to try to keep as many configurations as possible on a studio level and only override selectively, because micromanaging all of the project settings might become cumbersome down the line. Most of the settings can be safely adjusted and locked on a project after the production started."),(0,r.kt)("h2",{id:"understanding-overrides"},"Understanding Overrides"),(0,r.kt)("p",null,"Most of the individual settings can be set and overridden on multiple levels."),(0,r.kt)("h3",{id:"ayon-defaults"},"AYON defaults"),(0,r.kt)("p",null,"When you first open settings, all of the values and categories will be marked with either light ",(0,r.kt)("strong",{parentName:"p"},"grey labels")," or a ",(0,r.kt)("strong",{parentName:"p"},"grey vertical bar")," on the left edge of the expandable category."),(0,r.kt)("p",null,"The grey colouring signifies the value has been left at AYON Default. If the default changes in future AYON versions, these values will be reflect the change after you deploy the new version."),(0,r.kt)("h3",{id:"studio-defaults"},"Studio defaults"),(0,r.kt)("p",null,"Any values that you change and then press save in the bottom right corner, will be saved as studio defaults. This means they will stay at those values even if you update your pipeline. To make it clear which settings are set by you specifically, they are marked with a ",(0,r.kt)("strong",{parentName:"p"},"green edge")," and ",(0,r.kt)("strong",{parentName:"p"},"green labels"),", once set."),(0,r.kt)("p",null,"To set studio default, just change the value in the system tab and press save. If you want to keep the value but add the option to your studio default to protect it from potential future updates, you ran ",(0,r.kt)("inlineCode",{parentName:"p"},"right click")," and choose ",(0,r.kt)("inlineCode",{parentName:"p"},"add to studio default"),", then press save."),(0,r.kt)("p",null,"In the Project settings tab, you need to select the ",(0,r.kt)("strong",{parentName:"p"},"( Default )")," project on the left, to set your studio defaults for projects. The rest works the same as in the System tab."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"studio_defaults",src:a(80723).Z,width:"1207",height:"410"})),(0,r.kt)("p",null,"You can also reset any settings to AYON default by doing ",(0,r.kt)("inlineCode",{parentName:"p"},"right click")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"remove from studio default")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"studio_defaults",src:a(65460).Z,width:"1204",height:"410"})),(0,r.kt)("h3",{id:"project-overrides"},"Project Overrides"),(0,r.kt)("p",null,"Many settings are useful to be adjusted on a per-project basis. To identify project overrides, they are marked with ",(0,r.kt)("strong",{parentName:"p"},"orange edge")," and ",(0,r.kt)("strong",{parentName:"p"},"orange labels")," in the settings GUI."),(0,r.kt)("p",null,"The process of settting project overrides is similar to setting the Studio defaults. The key difference is to select a particular project you want to be configure. Those projects can be found on the left hand side of the Project Settings tab."),(0,r.kt)("p",null,"In the image below you can see all three overrides at the same time."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Deadline has ",(0,r.kt)("strong",{parentName:"li"},"no changes to the AYON defaults")," at all \u2014 ",(0,r.kt)("strong",{parentName:"li"},"grey")," colour of left bar."),(0,r.kt)("li",{parentName:"ol"},"Maya has ",(0,r.kt)("strong",{parentName:"li"},"studio-wide defaults configured"),", which are inherited in the particular project - ",(0,r.kt)("strong",{parentName:"li"},"green")," colour of left bar."),(0,r.kt)("li",{parentName:"ol"},"Nuke contains ",(0,r.kt)("strong",{parentName:"li"},"project specific overrides")," - ",(0,r.kt)("strong",{parentName:"li"},"orange")," colour of left bar.")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"colours_01",src:a(83690).Z,width:"1208",height:"313"})),(0,r.kt)("p",null,"Override colours work as breadcrumbs to allow quick identification of what was changed and where. As you can see on this image, Orange colour is propagated up the hierarchy even though only a single value (sync render version with workfile toggle), was changed."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"override_breadcumbs",src:a(81522).Z,width:"767",height:"551"})))}p.isMDXComponent=!0},83690:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/colours_02-c047734aedfcb7bc9c4074bb66822138.png"},81522:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/override_breadcrumbs-8782ae710b8670e558a89d45239588ae.png"},5551:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/settings_colour_coding-c9bf56110c0fa5633c0ab5e7f4e9c299.png"},80723:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/studio_defaults-f0a91de2829a98152ed6a7d055562a79.gif"},65460:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/studio_defaults_remove-9faa26be031f8043101abd54f044492b.gif"}}]);