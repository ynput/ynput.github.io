"use strict";(self.webpackChunkayon_docs=self.webpackChunkayon_docs||[]).push([[6585],{18679:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(67294),r=a(86010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:a},t)}},73992:(e,t,a)=>{a.d(t,{Z:()=>v});var n=a(87462),r=a(67294),l=a(86010),o=a(72957),s=a(16550),i=a(75238),u=a(33609),p=a(92560);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function c(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=c(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[i,u]=f({queryString:a,groupId:n}),[d,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),h=(()=>{const e=i??d;return m({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),b(e)}),[u,b,l]),tabValues:l}}var h=a(51048);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),c=e=>{const t=e.currentTarget,a=p.indexOf(t),n=u[a].value;n!==s&&(d(t),i(n))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;t=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;t=p[a]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:c},o,{className:(0,l.Z)("tabs__item",k.tabItem,o?.className,{"tabs__item--active":s===t})}),a??t)})))}function g(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function _(e){const t=b(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",k.tabList)},r.createElement(w,(0,n.Z)({},e,t)),r.createElement(g,(0,n.Z)({},e,t)))}function v(e){const t=(0,h.Z)();return r.createElement(_,(0,n.Z)({key:String(t)},e))}},97609:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var n=a(87462),r=(a(67294),a(3905)),l=a(20398),o=a(87006);a(73992),a(18679);const s={id:"addon_wrap_admin",title:"Wrap Admin Docs",sidebar_label:"Wrap"},i=void 0,u={unversionedId:"addon_wrap_admin",id:"addon_wrap_admin",title:"Wrap Admin Docs",description:"{versions.Wrap_Badge}",source:"@site/docs/addon_wrap_admin.md",sourceDirName:".",slug:"/addon_wrap_admin",permalink:"/docs/addon_wrap_admin",draft:!1,editUrl:"https://github.com/ynput/ayon-documentation/tree/main/website/docs/addon_wrap_admin.md",tags:[],version:"current",frontMatter:{id:"addon_wrap_admin",title:"Wrap Admin Docs",sidebar_label:"Wrap"},sidebar:"Admin",previous:{title:"Version Control Settings",permalink:"/docs/addon_version_control_admin_settings"},next:{title:"Zbrush",permalink:"/docs/addon_zbrush_admin"}},p={},d=[{value:"Wrap settings",id:"wrap-settings",level:2},{value:"Workfile Builder",id:"workfile-builder",level:3},{value:"Multi templates per task",id:"multi-templates-per-task",level:3}],c={toc:d},m="wrapper";function f(e){let{components:t,...s}=e;return(0,r.kt)(m,(0,n.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.D,{mdxType:"ReactMarkdown"},o.bK),(0,r.kt)("h2",{id:"wrap-settings"},"Wrap settings"),(0,r.kt)("p",null,"A Faceform ",(0,r.kt)("strong",{parentName:"p"},"Wrap")," is a topology transfer tool for creation of digital characters based on 3D scans of real actors or sculpts."),(0,r.kt)("p",null,"As ",(0,r.kt)("strong",{parentName:"p"},"Wrap")," has no Python API its integration is a bit limited. It can now open predefined template workfile based on profiles.\nThese template workfiles could contain placeholders which will be textually replaced before starting and opening a workfile with Wrap."),(0,r.kt)("p",null,"Location: ",(0,r.kt)("inlineCode",{parentName:"p"},"ayon+settings://wrap/workfile_builder/custom_templates")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Wrap Project Settings",src:a(66422).Z,width:"722",height:"522"})),(0,r.kt)("h3",{id:"workfile-builder"},"Workfile Builder"),(0,r.kt)("p",null,"Allows to open prepared workfile for an artist when no workfile exists. Useful to share standards, additional helpful content in the workfile."),(0,r.kt)("p",null,"Could be configured per ",(0,r.kt)("inlineCode",{parentName:"p"},"Task type"),", eg. ",(0,r.kt)("inlineCode",{parentName:"p"},"composition")," task type could use different ",(0,r.kt)("inlineCode",{parentName:"p"},".wrap")," template file than ",(0,r.kt)("inlineCode",{parentName:"p"},"art")," task.\nWorkfile template must be accessible for all artists."),(0,r.kt)("p",null,"(Currently template sharing is not handled by ",(0,r.kt)("a",{parentName:"p",href:"/docs/addon_site_sync_admin"},"SiteSync")," so they must be accessible for all artist machines.)"),(0,r.kt)("h3",{id:"multi-templates-per-task"},"Multi templates per task"),(0,r.kt)("p",null,"If your use case requires usage of multiple templates for single task (imagine it as steps)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Example:\n- ALIGN (task)\n  - align scan (step)\n  - align scan render\n  - retouch sheet\n- MODEL (task)\n  - wrap (step)\n")),(0,r.kt)("p",null,"configuration in ",(0,r.kt)("inlineCode",{parentName:"p"},"Workfile Builder")," wouldn't be enough. "),(0,r.kt)("p",null,"Admin needs to configure location of separate templates in ",(0,r.kt)("inlineCode",{parentName:"p"},"ayon+settings://wrap/multiple_templates_per_tasks"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Wrap Multi templates Project Settings",src:a(51412).Z,width:"938",height:"1069"})),(0,r.kt)("p",null,"Inputs are type name or type and returned value is path to the template."),(0,r.kt)("p",null,"There is also need for additional new template in ",(0,r.kt)("inlineCode",{parentName:"p"},"Anatomy"),". It is expected to be called ",(0,r.kt)("inlineCode",{parentName:"p"},"wrap_multi")," and would look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Directory template: {root[work]}/{project[name]}/{hierarchy}/{folder[name]}/work/{task[name]}</{template_name}>\nFile name template: {project[code]}_{folder[name]}_{task[name]}<_{template_name}>_{@version}.{ext}\n")),(0,r.kt)("p",null,"That added ",(0,r.kt)("inlineCode",{parentName:"p"},"</{template_name}>")," is important to separate workfiles for particular template into subfolders."),(0,r.kt)("p",null,"Artist then will be shown with new Dialog where they can select from list of templates and shown if any workfile exist for those."))}f.isMDXComponent=!0},51412:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/admin_hosts_wrap_multi_templates-40b43a53f27b41f4567b041e9aeaf414.png"},66422:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/admin_hosts_wrap_settings-6005ab11e1b01534d797b766c654ba87.png"}}]);