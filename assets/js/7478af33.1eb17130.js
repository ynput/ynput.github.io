"use strict";(self.webpackChunkayon_docs=self.webpackChunkayon_docs||[]).push([[3334],{71094:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var i=a(87462),n=(a(67294),a(3905)),s=a(20398),r=a(87006);const o={id:"addon_maya_multiverse_artist",title:"Multiverse for Maya",sidebar_label:"Multiverse USD"},l=void 0,d={unversionedId:"addon_maya_multiverse_artist",id:"addon_maya_multiverse_artist",title:"Multiverse for Maya",description:"{versions.Maya_Badge}",source:"@site/docs/addon_maya_multiverse_artist.md",sourceDirName:".",slug:"/addon_maya_multiverse_artist",permalink:"/docs/addon_maya_multiverse_artist",draft:!1,editUrl:"https://github.com/ynput/ayon-documentation/tree/main/website/docs/addon_maya_multiverse_artist.md",tags:[],version:"current",frontMatter:{id:"addon_maya_multiverse_artist",title:"Multiverse for Maya",sidebar_label:"Multiverse USD"},sidebar:"artist",previous:{title:"Maya",permalink:"/docs/addon_maya_artist"},next:{title:"Yeti",permalink:"/docs/addon_maya_yeti_artist"}},p={},u=[{value:"Working with Multiverse in AYON",id:"working-with-multiverse-in-ayon",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Understanding Assets, Compounds, Compositions, Overrides and Layering",id:"understanding-assets-compounds-compositions-overrides-and-layering",level:3},{value:"Creators",id:"creators",level:3},{value:"Publishers",id:"publishers",level:3},{value:"Loader",id:"loader",level:3},{value:"Look",id:"look",level:3},{value:"About embedding shading networks in USD",id:"about-embedding-shading-networks-in-usd",level:3},{value:"Rendering",id:"rendering",level:3},{value:"Example Multiverse Pipeline and API",id:"example-multiverse-pipeline-and-api",level:3}],m={toc:u},h="wrapper";function c(e){let{components:t,...o}=e;return(0,n.kt)(h,(0,i.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(s.D,{mdxType:"ReactMarkdown"},r.Y0),(0,n.kt)("h2",{id:"working-with-multiverse-in-ayon"},"Working with Multiverse in AYON"),(0,n.kt)("p",null,"AYON supports creating, publishing and loading of ",(0,n.kt)("a",{parentName:"p",href:"https://multi-verse.io"},"Multiverse | USD")," data. The minimum Multiverse version supported is v6.7,\nand version 7.0 is recommended."),(0,n.kt)("p",null,"In a nutshell it is possible to:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Create USD Assets, USD compositions, USD Overrides."),(0,n.kt)("p",{parentName:"li"},"This ",(0,n.kt)("em",{parentName:"p"},"creates")," AYON instances as Maya set nodes that contain information\nfor published USD data.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Create Multiverse Looks."),(0,n.kt)("p",{parentName:"li"},"This ",(0,n.kt)("em",{parentName:"p"},"creates")," AYON instances as Maya set nodes that contain information\nfor published Maya shading networks data and USD material assignment data.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Publish USD Assets, USD compositions and USD Overrides."),(0,n.kt)("p",{parentName:"li"},"This ",(0,n.kt)("em",{parentName:"p"},"writes")," USD files to disk and ",(0,n.kt)("em",{parentName:"p"},"publishes")," information to the AYON\ndatabase.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Publish Multiverse Looks."),(0,n.kt)("p",{parentName:"li"},"This ",(0,n.kt)("em",{parentName:"p"},"writes")," a Maya file containing shading networks (to import in Maya), a USD override file containing material assignment information (to layer in a Multiverse Compound), it copies original & mip-mapped textures to disk and ",(0,n.kt)("em",{parentName:"p"},"publishes")," information to the AYON database.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},'Load any USD data into Multiverse "Compound" shape nodes.'),(0,n.kt)("p",{parentName:"li"},"This ",(0,n.kt)("em",{parentName:"p"},"reads")," USD files (and also Alembic files) into Maya by ",(0,n.kt)("em",{parentName:"p"},"streaming")," them to the viewport.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Rendering USD data procedurally with 3Delight",(0,n.kt)("sup",null,"NSI"),", Arnold, Redshift, RenderMan and VRay."),(0,n.kt)("p",{parentName:"li"},"This reads USD files by ",(0,n.kt)("em",{parentName:"p"},"streaming")," them procedurally to the renderer, at render time."))),(0,n.kt)("p",null,"USD files written by Multiverse are 100% native USD data, they can be exchange with any other DCC applications able to interchange USD. Likewise, Multivers can read native USD data created by other applications. The USD extensions ar supported: ",(0,n.kt)("inlineCode",{parentName:"p"},".usd")," (binary), ",(0,n.kt)("inlineCode",{parentName:"p"},".usda")," (ASCII), ",(0,n.kt)("inlineCode",{parentName:"p"},".usdz"),'. (zipped, optionally wit textures). Sequences of USD files can also be read via "USD clips".'),(0,n.kt)("p",null,"It is also possible to load Alembic data (",(0,n.kt)("inlineCode",{parentName:"p"},".abc"),") in Multiverse Compounds further compose it & ov rride it in other USD files, and render it procedurally.\nAlembic data is always converted on the fly (in memory) to USD data. USD clip from Alembic data are also supported."),(0,n.kt)("h3",{id:"configuration"},"Configuration"),(0,n.kt)("p",null,"To configure Multiverse in AYON, an admin privileges needs to setup a new\nAYON tool in the AYON Project Settings, using a similar configuration as\nthe one depicted here:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Maya - Multiverse Setup",src:a(96156).Z,width:"1340",height:"1476"})),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'{\n    "MULTIVERSE_PATH": "/Path/to/Multiverse-{MULTIVERSE_VERSION}",\n    "MAYA_MODULE_PATH": "{MULTIVERSE}/Maya;{MAYA_MODULE_PATH}"\n}\n\n{\n    "MULTIVERSE_VERSION": "7.1.0-py27"\n}\n\n')),(0,n.kt)("p",null,"The Multiverse Maya module file (.mod) pointed above contains all the necessary\nenvironment variables to run Multiverse."),(0,n.kt)("p",null,"The AYON settings will contain blocks to enable/disable the Multiverse\nCreators and Loader, along with sensible studio setting."),(0,n.kt)("p",null,"For more information about setup of Multiverse please refer to the relative page\non the ",(0,n.kt)("a",{parentName:"p",href:"https://multi-verse.io/docs"},"Multiverse official documentation"),"."),(0,n.kt)("h3",{id:"understanding-assets-compounds-compositions-overrides-and-layering"},"Understanding Assets, Compounds, Compositions, Overrides and Layering"),(0,n.kt)("p",null,'In Multiverse we use some terminology that relates to USD I/O: terms like\n"Assets", "Compounds", "Compositions", "Overrides" and "Layering".'),(0,n.kt)("p",null,"Please hop to the new ",(0,n.kt)("a",{parentName:"p",href:"https://j-cube.jp/solutions/multiverse/docs/usage/introduction"},"Multiverse Introduction")," page on the\nofficial documentation to understand them before reading the next sections."),(0,n.kt)("h3",{id:"creators"},"Creators"),(0,n.kt)("p",null,'It is possible to create AYON "instances" (resulting in Maya set containers)\nfor publishing Multiverse USD Assets, Compositions, Overrides and Looks.'),(0,n.kt)("p",null,"When creating AYON instances for Multiverse USD Asset, Composition,\nOverride and Look, the creator plug-in will put the relative selected data in a\nMaya set node which holds the properties used by the Multiverse data writer for\npublishing."),(0,n.kt)("p",null,"You can choose the USD file format in the Creators' set nodes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Assets: ",(0,n.kt)("inlineCode",{parentName:"li"},".usd")," (default) or ",(0,n.kt)("inlineCode",{parentName:"li"},".usda")," or ",(0,n.kt)("inlineCode",{parentName:"li"},".usdz")),(0,n.kt)("li",{parentName:"ul"},"Compositions: ",(0,n.kt)("inlineCode",{parentName:"li"},".usda")," (default) or ",(0,n.kt)("inlineCode",{parentName:"li"},".usd")),(0,n.kt)("li",{parentName:"ul"},"Overrides: ",(0,n.kt)("inlineCode",{parentName:"li"},".usda")," (default) or ",(0,n.kt)("inlineCode",{parentName:"li"},".usd")),(0,n.kt)("li",{parentName:"ul"},"Looks: ",(0,n.kt)("inlineCode",{parentName:"li"},".ma")," (default)")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Maya - Multiverse Asset Creator",src:a(62213).Z,width:"1106",height:"1035"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Maya - Multiverse Asset Creator",src:a(40234).Z,width:"1140",height:"594"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Maya - Multiverse Asset Creator",src:a(98912).Z,width:"1122",height:"592"})),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Maya - Multiverse Asset Creator",src:a(62803).Z,width:"1113",height:"594"})),(0,n.kt)("h3",{id:"publishers"},"Publishers"),(0,n.kt)("p",null,"The relative publishers for Multiverse USD Asset, Composition, Override and Look\nare available. The first three write USD files to disk, while look writes a Maya\nfile along with the mip-mapped textures. All communicate publish info to the\nAYON database."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Maya - Multiverse Publisher",src:a(33347).Z,width:"923",height:"1442"})),(0,n.kt)("h3",{id:"loader"},"Loader"),(0,n.kt)("p",null,'The loader creates a Multiverse "Compound" shape node reading the USD file of\nchoice. All data is ',(0,n.kt)("em",{parentName:"p"},"streamed")," to the viewport and not contained in Maya. Thanks\nto the various viewport draw options the user can strategically decide how to\nminimize the cost of viewport draw effectively being able to load any data, this\nallows to bring into Maya scenes of virtually unlimited complexity."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Maya - Multiverse Loader",src:a(70817).Z,width:"1300",height:"820"})),(0,n.kt)("admonition",{title:"Note",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},'When using the Loader, Multiverse, by design, never "imports" USD data into the\nMaya scene as Maya data. Instead, when desired, Multiverse permits to import\nspecific USD primitives, or entire hierarchies, into the Maya scene as Maya data\nselectively from MEOW, it also tracks what is being imported with a "live\nconnection" , so upon modification, it is possible to write (create & publish)\nthe modifies data as a USD file for being layered on top of its relative\nCompound. See the ',(0,n.kt)("a",{parentName:"p",href:"https://j-cube.jp/solutions/multiverse/docs/usage/importer"},"Multiverse Importer")," documentation.")),(0,n.kt)("h3",{id:"look"},"Look"),(0,n.kt)("p",null,"In AYON a Multiverse Look is the combination of:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"a Maya file that contains the shading networks that were assigned to the items\nof a Multiverse Compound."),(0,n.kt)("li",{parentName:"ul"},"a Multiverse USD Override file that contains the material assignment\ninformation (which Maya material was assigned to which USD item)"),(0,n.kt)("li",{parentName:"ul"},"mip-mapped textures")),(0,n.kt)("p",null,"Multiverse Look shading networks are typically Maya-referenced in the lighting\nand shot scenes."),(0,n.kt)("p",null,'Materials are assigned to the USD items in the Compound via the "material\nassignment" information that is output in the lookdev stage by a Multiverse\nOverride. Once published the override can be Layered on the Compound so that\nmaterials will be assigned to items. Finally, an attribute Override on the root\nitem of the Compound is used to define the ',(0,n.kt)("inlineCode",{parentName:"p"},"namespace")," with which the shading\nnetworks were referenced in Maya. At this point the renderer knows which\nmaterial to assign to which item and it is possible to render and edit the\nmaterials as usual. Because the material exists in Maya you can perform IPR and\ntune the materials as you please."),(0,n.kt)("p",null,"The Multiverse Look will also publish textures in optimized mip-map format,\ncurrently supporting the ",(0,n.kt)("inlineCode",{parentName:"p"},".tdl")," (Texture Delight) mip map format of the 3Delight\nNSI renderer. MipMaps are required when the relative option is checked and you\nare publishing Multiverse Looks with the ",(0,n.kt)("inlineCode",{parentName:"p"},"final")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"-")," product, while they are\nnot required with the ",(0,n.kt)("inlineCode",{parentName:"p"},"WIP")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"test")," products. MipMaps are found automatically\nas long as they exist alongside the original textures. Their generation can be\nautomatic when using 3Delight for Maya or can be manual by using the ",(0,n.kt)("inlineCode",{parentName:"p"},"tdlmake"),"\nbinary utility."),(0,n.kt)("h3",{id:"about-embedding-shading-networks-in-usd"},"About embedding shading networks in USD"),(0,n.kt)("p",null,"Alternatively, but also complementary to the Multiverse Look, as of Multiverse\n7 it is also possible to write shading networks ",(0,n.kt)("em",{parentName:"p"},"inside")," USD files: that is\nachieved by using either the Asset writer (if material are defined in the\nmodeling stage) and the Override writer (if materials are defined in the lookdev\nor later stage)."),(0,n.kt)("p",null,"Some interesting consequences of USD shading networks in Multiverse:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"they can be overridden by a shading network in Maya by assigning in MEOW a\nMaya material as an override"),(0,n.kt)("li",{parentName:"ol"},"they are available for assignment in MEOW, so you can assign a USD material\nto an item as an override"),(0,n.kt)("li",{parentName:"ol"},"From Hypershade you can use the Multiverse USD shading network write File>\nExport option to write USD shading network libraries to then layer on an asset\nand perform 2. again.")),(0,n.kt)("p",null,"Note that:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Shading networks in USD can then be currently rendered with\n3Delight",(0,n.kt)("sup",null,"NSI")),(0,n.kt)("li",{parentName:"ul"},"Shading networks in USD can be used for interchange with DCC apps. Multiverse\nshading networks are written natively with the USD Shade schema."),(0,n.kt)("li",{parentName:"ul"},"usdPreviewSurface shading networks are too considered embedded shading\nnetworks, though they are classified separately from non-preview / final\nquality shading networks"),(0,n.kt)("li",{parentName:"ul"},"USDZ files use usdPreviewSurface shading networks, and therefore can be, too,\nrendered (with 3Delight",(0,n.kt)("sup",null,"NSI"),")"),(0,n.kt)("li",{parentName:"ul"},"in case both usdPreviewSurface and final quality shading networks, the latter\nwill be used for rendering (while the former can be previewed in the viewport)  "),(0,n.kt)("li",{parentName:"ul"},"it is possible to disable rendering of any embedded shading network via the\nrelative option in the Compound Attribute Editor.")),(0,n.kt)("h3",{id:"rendering"},"Rendering"),(0,n.kt)("p",null,"Multiverse offers procedural rendering with all the major production renderers:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"3Delight",(0,n.kt)("sup",null,"NSI")),(0,n.kt)("li",{parentName:"ul"},"Arnold"),(0,n.kt)("li",{parentName:"ul"},"Redshift"),(0,n.kt)("li",{parentName:"ul"},"RenderMan"),(0,n.kt)("li",{parentName:"ul"},"VRay")),(0,n.kt)("p",null,"Procedural rendering effectively means that data is ",(0,n.kt)("em",{parentName:"p"},"streamed")," to the renderer\nat render-time, without the need to store the data in the Maya scene (this\neffectively means small .ma/.mb files that load fast) nor in the renderer native\nfile format scene description file (this effectively means tiny ",(0,n.kt)("inlineCode",{parentName:"p"},".nsi")," / ",(0,n.kt)("inlineCode",{parentName:"p"},".ass"),"\n/ ",(0,n.kt)("inlineCode",{parentName:"p"},".vrscene")," / ",(0,n.kt)("inlineCode",{parentName:"p"},".rib")," files that load fast)."),(0,n.kt)("p",null,"This is completely transparent to the user: Multiverse Compound nodes present in\nthe scene, once a render is launched, will stream data to the renderer in a\nprocedural fashion."),(0,n.kt)("h3",{id:"example-multiverse-pipeline-and-api"},"Example Multiverse Pipeline and API"),(0,n.kt)("p",null,"An example diagram of the data flow in a Maya pipeline using Multiverse is\navailable, see the ",(0,n.kt)("a",{parentName:"p",href:"https://j-cube.jp/solutions/multiverse/docs/pipeline"},"Multiverse Pipeline")," documentation."),(0,n.kt)("p",null,"A very easy to use Python API to automate any task is available, the API is\nuser friendly and does not require any knowledge of the vast and complex USD\nAPIs. See the ",(0,n.kt)("a",{parentName:"p",href:"https://j-cube.jp/solutions/multiverse/docs/dev/python-api.html"},"Multiverse Python API")," documentation."))}c.isMDXComponent=!0},96156:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/multiverse_setup-2011c6d3f230e61d598e2de7345f09d0.png"},62213:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/openpype_asset_creator-40abca4271103fb2c5ee1accd56940df.png"},40234:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/openpype_composition_creator-47bfc3d9c5ba32aad46fbd2b4e0c7b67.png"},70817:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/openpype_loader-bc4bc5af4a0e61ce6c9618057e700702.png"},62803:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/openpype_look_creator-aad106feacc348697218292e07c7ded2.png"},98912:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/openpype_override_creator-bf0daf2ffea1679297393084d5cfb34d.png"},33347:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/openpype_publishers-ada418fd9ed16604f29062fefac54cbb.png"}}]);